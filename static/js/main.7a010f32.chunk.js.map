{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","redux/reducers/postReducer.js","pages/LoadingPage/LoadingPage.js","pages/HomePage/HomePage.js","pages/ArchivePage/ArchivePage.js","pages/AboutPage/AboutPage.js","pages/Post/PostPage.js","pages/NewPost/NewPost.js","pages/UpdatePost/UpdatePost.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","userReducer","createSlice","name","initialState","errMessage","user","reducers","setErrMessage","state","action","payload","setUser","actions","login","username","password","dispatch","method","body","JSON","stringify","loginApi","data","ok","getMeApi","toString","message","register","nickname","registerApi","cleanErrMessage","Root","styled","div","Field","Input","input","Button","button","Error","LoginPage","useState","setUsername","setPassword","useSelector","store","users","history","useHistory","useDispatch","useEffect","onSubmit","e","id","push","value","onChange","target","type","includes","RegisterPage","setNickname","postReducer","isLoadingPost","post","posts","page","setIsLoadingPost","setPost","setPosts","setPage","getPosts","getPostsAPI","Math","ceil","get","catch","err","console","log","getPost","getPostAPI","cleanPosts","newPost","title","addPost","updatePost","updatePostApi","deletePost","deletePostApi","Loading","LoadingPage","PostContainer","PostTop","PostTitle","Link","PostContent","PostDate","Post","to","Date","createdAt","toLocaleString","slice","HomePage","isLoading","map","Pagination","PageBtnGroup","FirstPage","props","$active","PreviousPage","NextPage","LastPage","ButtonGroup","EditButton","DeleteButton","onClick","ArchivePage","totalPage","useParams","Number","Title","h2","UpdateDate","Content","AboutPage","PostPage","textarea","NewPost","setTitle","setBody","newPostResponse","UpdatePost","updatePostResponse","HeaderContainer","Brand","h1","NavbarList","Nav","NavLogout","HeaderLeftContainer","Header","location","useLocation","pathname","App","window","scrollTo","basename","process","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a010f32.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${\n      page ? page : 1\n    }&_limit=5`\n  ).then((res) => res);\n};\n\nexport const getSinglePost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const addPost = ({ title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const updatePost = ({ id, title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  if (!token) return null;\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  login as loginApi,\n  getMe as getMeApi,\n  register as registerApi,\n} from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\n\nconst initialState = {\n  errMessage: null,\n  user: null,\n};\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setErrMessage: (state, action) => {\n      state.errMessage = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { setErrMessage, setUser } = userReducer.actions;\n\nexport const login = (username, password) => (dispatch) => {\n  return loginApi(username, password).then((data) => {\n    if (!data.ok) {\n      return dispatch(setErrMessage(data.message));\n    }\n    setAuthToken(data.token);\n\n    return getMeApi()?.then((res) => {\n      if (!res.ok) {\n        setAuthToken(null);\n        return dispatch(setErrMessage(res.toString()));\n      }\n      dispatch(setUser(res.data));\n      return res.data;\n    });\n  });\n};\n\nexport const register = (nickname, username, password) => (dispatch) => {\n  return registerApi(nickname, username, password).then((data) => {\n    if (!data.ok) {\n      return dispatch(setErrMessage(data.message));\n    }\n    setAuthToken(data.token);\n\n    return getMeApi().then((res) => {\n      if (!res.ok) {\n        setAuthToken(null);\n        return dispatch(setErrMessage(res.toString()));\n      }\n      dispatch(setUser(res.data));\n      return res.data;\n    });\n  });\n};\n\nexport const logout = () => (dispatch) => {\n  setAuthToken(\"\");\n  dispatch(setUser(null));\n};\n\nexport const getMe = () => (dispatch) => {\n  getMeApi()?.then((res) => {\n    if (!res.ok) {\n      setAuthToken(null);\n      return dispatch(setErrMessage(res.toString()));\n    }\n    dispatch(setUser(res.data));\n  });\n};\n\nexport const cleanErrMessage = () => (dispatch) => {\n  dispatch(setErrMessage(null));\n};\n\nexport default userReducer.reducer;\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, cleanErrMessage } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Field = styled.div`\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  width: 200px;\n  padding: 8px;\n  font-size: 14px;\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  width: 80px;\n  height: 40px;\n  border: 1px solid grey;\n  margin-top: 20px;\n`;\n\nconst Error = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const errMessage = useSelector((store) => store.users.errMessage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    dispatch(login(username, password)).then((user) => {\n      if (user && user.id) {\n        history.push(\"/\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => dispatch(cleanErrMessage());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          USERNAME:{\" \"}\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Field>\n        <Field>\n          PASSWORD:{\" \"}\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Field>\n        <Button type=\"submit\">登入</Button>\n        {errMessage && (\n          <Error>\n            {errMessage.includes(\"required\")\n              ? \"請填入所有欄位\"\n              : errMessage.includes(\"invalid\")\n              ? \"帳號或密碼錯誤\"\n              : errMessage}\n          </Error>\n        )}\n      </form>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, cleanErrMessage } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Field = styled.div`\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  width: 200px;\n  padding: 8px;\n  font-size: 14px;\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  width: 80px;\n  height: 40px;\n  border: 1px solid grey;\n  margin-top: 20px;\n`;\n\nconst Error = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const errMessage = useSelector((store) => store.users.errMessage);\n\n  const handleSubmit = (e) => {\n    dispatch(register(nickname, username, password)).then((user) => {\n      if (user && user.id) {\n        history.push(\"/\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => dispatch(cleanErrMessage());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          NICKNAME:{\" \"}\n          <Input\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n          />\n        </Field>\n        <Field>\n          USERNAME:{\" \"}\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Field>\n        <Field>\n          PASSWORD:{\" \"}\n          <Input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Field>\n        <Button type=\"submit\">註冊</Button>\n        {errMessage && (\n          <Error>\n            {errMessage.includes(\"required\")\n              ? \"請填入所有欄位\"\n              : errMessage.includes(\"exists\")\n              ? \"此帳號已存在\"\n              : errMessage}\n          </Error>\n        )}\n      </form>\n    </Root>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getSinglePost as getPostAPI,\n  addPost,\n  getPosts as getPostsAPI,\n  updatePost as updatePostApi,\n  deletePost as deletePostApi,\n} from \"../../WebAPI\";\n\nconst initialState = {\n  isLoadingPost: false,\n  post: null,\n  posts: null,\n  page: null,\n  errMessage: null,\n};\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n    setErrMessage: (state, action) => {\n      state.errMessage = action.payload;\n    },\n  },\n});\n\nexport const { setIsLoadingPost, setPosts, setPage, setPost, setErrMessage } =\n  postReducer.actions;\n\nexport const getPosts = (page) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostsAPI(page)\n    .then((res) => {\n      dispatch(setPage(Math.ceil(res.headers.get(\"x-total-count\") / 5)));\n      return res.json();\n    })\n    .then((posts) => {\n      dispatch(setPosts(posts));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id)\n    .then((res) => {\n      dispatch(setPost(res));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const cleanPost = () => (dispatch) => {\n  dispatch(setPost(null));\n};\n\nexport const cleanPosts = () => (dispatch) => {\n  dispatch(setPosts(null));\n};\n\nexport const newPost = (data) => (dispatch) => {\n  return addPost(data).then((res) => {\n    if (!res.ok) {\n      return dispatch(setErrMessage(res.message));\n    }\n    return res;\n  });\n};\n\nexport const updatePost = (data) => (dispatch) => {\n  return updatePostApi(data).then((res) => {\n    return res;\n  });\n};\n\nexport const deletePost = (id) => (dispatch) => {\n  return deletePostApi(id).then((res) => {\n    return res;\n  });\n};\n\nexport const cleanErrMessage = () => (dispatch) => {\n  dispatch(setErrMessage(null));\n};\n\nexport default postReducer.reducer;\n","import styled from \"styled-components\";\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content center;\n`;\n\nexport default function LoadingPage() {\n  return <Loading>Loading ... </Loading>;\n}\n","import styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts, cleanPosts } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport LoadingPage from '../LoadingPage'\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n\nconst PostContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  padding: 15px;\n  margin-top: 14px;\n`;\n\nconst PostTop = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 22px;\n  color: #333;\n  text-decoration: none;\n  flex: 1;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.div`\n  width: 100%;\n  padding: 15px 0;\n  font-size: 14px;\n  color: #5f5f5f;\n  word-break: break-all;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  font-size: 14px;\n  margin-left: 16px;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTop>\n        <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostTop>\n      <PostContent>{post.body.slice(0, 300)}</PostContent>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(store => store.posts.isLoadingPost)\n  const posts = useSelector(store => store.posts.posts)\n  useEffect(() => {\n    dispatch(getPosts(1))\n    return () => dispatch(cleanPosts(null))\n  },[dispatch]);\n\n  return (\n    <Root>\n      {isLoading && <LoadingPage />}\n      <h1>最新文章</h1>\n      {posts && posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  getPosts,\n  cleanPosts,\n  deletePost,\n} from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingPage from \"../LoadingPage\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n\nconst PostContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  padding: 15px;\n  margin-top: 14px;\n  height: 180px;\n`;\n\nconst PostTop = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 22px;\n  color: #333;\n  text-decoration: none;\n  flex: 1;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.div`\n  width: 100%;\n  padding: 15px 0;\n  font-size: 14px;\n  color: #5f5f5f;\n  word-break: break-all;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  font-size: 14px;\n  margin-left: 16px;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 24px;\n`;\n\nconst PageBtnGroup = styled.div`\n  display: flex;\n  width: 120px;\n`;\n\nconst FirstPage = styled(Link)`\n  display: none;\n  text-decoration: none;\n  color: #3c3c3c;\n  font-size: 14px;\n\n  ${(props) =>\n    props.$active &&\n    `\n      display: flex;\n    `}\n`;\nconst PreviousPage = styled(Link)`\n  display: none;\n  text-decoration: none;\n  color: #3c3c3c;\n  margin-left: 16px;\n  font-size: 14px;\n\n  ${(props) =>\n    props.$active &&\n    `\n      display: flex;\n    `}\n`;\nconst NextPage = styled(Link)`\n  display: none;\n  text-decoration: none;\n  margin-left: 16px;\n  color: #3c3c3c;\n  font-size: 14px;\n\n  ${(props) =>\n    props.$active &&\n    `\n      display: flex;\n    `}\n`;\nconst LastPage = styled(Link)`\n  display: none;\n  text-decoration: none;\n  margin-left: 16px;\n  color: #3c3c3c;\n  font-size: 14px;\n\n  ${(props) =>\n    props.$active &&\n    `\n      display: flex;\n    `}\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n`;\n\nconst EditButton = styled(Link)`\n  border: 1px solid grey;\n  background: white;\n  text-decoration: none;\n  color: grey;\n  padding: 5px 10px;\n`;\n\nconst DeleteButton = styled.div`\n  border: 1px solid grey;\n  background: white;\n  color: grey;\n  padding: 5px 10px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nfunction Post({ post, dispatch, page, user }) {\n  const handleDelete = (id) => {\n    dispatch(deletePost(id)).then((res) => {\n      dispatch(getPosts(page));\n    });\n  };\n\n  return (\n    <PostContainer>\n      <PostTop>\n        <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostTop>\n      <PostContent>\n        {user && (\n          <ButtonGroup>\n            <EditButton to={`/posts/update/${post.id}`}>編輯</EditButton>\n            <DeleteButton onClick={() => handleDelete(post.id)}>\n              刪除\n            </DeleteButton>\n          </ButtonGroup>\n        )}\n        {post.body.slice(0, 200)}\n      </PostContent>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function ArchivePage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const posts = useSelector((store) => store.posts.posts);\n  const totalPage = useSelector((store) => store.posts.page);\n  const user = useSelector((store) => store.users.user);\n  let { page } = useParams();\n  page = Number(page) || 1;\n\n  useEffect(() => {\n    dispatch(getPosts(page));\n    return () => dispatch(cleanPosts(null));\n  }, [page, dispatch]);\n\n  return (\n    <Root>\n      {isLoading && <LoadingPage />}\n      {posts &&\n        posts.map((post) => (\n          <Post\n            key={post.id}\n            post={post}\n            dispatch={dispatch}\n            page={page}\n            user={user}\n          />\n        ))}\n      <Pagination>\n        <PageBtnGroup>\n          <FirstPage to={`/archives/1`} $active={page !== 1}>\n            第一頁\n          </FirstPage>\n          <PreviousPage to={`/archives/${page - 1}`} $active={page - 1 > 0}>\n            上一頁\n          </PreviousPage>\n        </PageBtnGroup>\n        <div>\n          第 {page} 頁 / 共 {totalPage} 頁\n        </div>\n        <PageBtnGroup>\n          <NextPage\n            to={`/archives/${page + 1}`}\n            $active={page + 1 <= totalPage}\n          >\n            下一頁\n          </NextPage>\n          <LastPage to={`/archives/${totalPage}`} $active={page !== totalPage}>\n            最末頁\n          </LastPage>\n        </PageBtnGroup>\n      </Pagination>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  padding: 30px;\n`;\n\nconst Title = styled.h2``;\nconst UpdateDate = styled.div`\n  font-size: 16px;\n  margin: 16px 0;\n  color: grey;\n`;\n\nconst Content = styled.div`\n  white-space: pre-wrap;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <Title>關於我</Title>\n      <UpdateDate>2021年5月25日</UpdateDate>\n      <Content>\n        {`\n（這裡借用 Huli 部落格的關於我來用～XD）\n\n原本是個前端工程師，2021 年 5 月開始默默轉做資安相關的研究，還很菜。\n\n重度拖延症患者，興趣是光想不做，有很多想做的事，卻一件都沒有執行。無聊的時候喜歡寫寫文章，發現自己好像有把事情講得比其他人清楚的能力，相信分享與交流可以讓世界更美好。\n\n喜歡把常見問題寫成文章，就不用每次被問就回答一次，就跟寫 code的時候要順便記得重構一樣。\n\n如果你對我怎麼學程式以及相關背景有興趣，可以閱讀：\n\n1. 自學、哲學、講學：我的程式之路\n\n如果你好奇我為什麼寫文章，每寫一篇都花多久，可以閱讀：\n\n1. 廢文工作者的養成\n2. 我為什麼寫部落格，以及部落格帶給我的影響\n3. 我是如何完成一篇文章的？\n\n如果你想知道我對學習方面的看法，可以參考：\n\n1. 致跟我一樣的拖延症患者：動力是需要刻意創造的\n2. 當我們在學程式時，要學的到底是什麼？\n3. 程式相關問題一網打盡：談自學、轉職、出國、職涯、教學、補習、騙錢、產業以及努力\n4. 用對你有效的學習方法，無論那是什麼\n5. 打造「正確」學習 mindset\n\n如果你對我的工作經歷有興趣，可以看看：\n\n1. 一個工程師的履歷進化史\n2. 成為前端工程師的四週年回顧\n3. Linkedin\n\n如果你想知道我的教學理念跟課程，可以參考：\n\n1. 華麗謝幕：程式導師實驗計畫第三期成果以及未來走向\n2. 大改版：程式導師實驗計畫第三期報名簡章\n3. Lidemy 新課程上架以及課程說明\n4. 四個月過去了，來找我學程式的學生們怎麼樣了？\n5. Lidemy 鋰學院\n\n想看更多相關文章可以參考我的 Medium 文章列表，想聯絡我的話可以透過 Email：aszx87410@gmail.com，網頁右上角也可以找到我的推特及臉書。\n`}\n\n        <h3>關於部落格</h3>\n        {`\n經歷過無數次的搬家之後，決定在這邊定居，因為終於找到了一個喜歡的佈景主題。希望不要再搬了。\n\n此部落格採用 Hexo + Minos theme + GitHub Pages 架設而成。有改過 Minos 裡面的一些東西，例如說字體大小、文章列表以及分類頁面等等，改過的版本在這邊：aszx87410/hexo-theme-minos。\n\n這邊是跟技術比較相關的文章，其他文章會放在我的 Medium，哪天如果 Medium 不幸倒掉，會把文章都搬過來這邊。\n\n雖然說前面有提到「搬家」，但其實沒有把所有文章都搬過來，有稍微篩選過一下，舊的文章都還留在Logdown，因為早期的文章偏筆記類型，所以就沒有搬過來了。\n`}\n      </Content>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  getPost,\n  cleanPost,\n  deletePost,\n} from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingPage from \"../LoadingPage\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-radius: 5px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n`;\nconst PostTitle = styled.div`\n  margin: 16px 0;\n  font-size: 24px;\n  color: #333;\n`;\n\nconst PostDate = styled.div`\n  text-align: right;\n  width: 100%;\n  color: rgba(0, 0, 0, 0.8);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\n\nconst PostContent = styled.div`\n  padding: 30px;\n  line-height: 1.5rem;\n  color: #5f5f5f;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n`;\n\nconst EditButton = styled(Link)`\n  border: 1px solid grey;\n  background: white;\n  text-decoration: none;\n  color: grey;\n  padding: 5px 10px;\n`;\n\nconst DeleteButton = styled.div`\n  border: 1px solid grey;\n  background: white;\n  color: grey;\n  padding: 5px 10px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n\n  useEffect(() => {\n    dispatch(getPost(id));\n    return () => dispatch(cleanPost(null));\n  }, [id, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(deletePost(id)).then((res) => {\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <Root>\n      {isLoading && <LoadingPage />}\n      {post && (\n        <PostContainer>\n          <PostTitle>{post.title}</PostTitle>\n          <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          {user && (\n            <ButtonGroup>\n              <EditButton to={`/posts/update/${id}`}>編輯</EditButton>\n              <DeleteButton onClick={handleDelete}>刪除</DeleteButton>\n            </ButtonGroup>\n          )}\n          <PostContent>{post.body}</PostContent>\n        </PostContainer>\n      )}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { newPost, cleanErrMessage } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst PostContainer = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst PostTitle = styled.input`\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n  color: #333;\n  margin-bottom: 24px;\n  margin-top: 14px;\n`;\n\nconst PostContent = styled.textarea`\n  height: 500px;\n  width: 100%;\n  margin-bottom: 24px;\n  margin-top: 14px;\n  padding: 10px;\n  white-space: ;\n`;\n\nconst Button = styled.button`\n  width: 80px;\n  height: 40px;\n  background: grey;\n  color: white;\n  border: none;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function NewPost() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const errMessage = useSelector((store) => store.posts.errMessage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    dispatch(\n      newPost({\n        title,\n        body,\n      })\n    ).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/posts/${newPostResponse.id}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => dispatch(cleanErrMessage());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <form onSubmit={handleSubmit}>\n        {errMessage && (\n          <Error>\n            {errMessage.includes(\"title\")\n              ? \"請輸入標題\"\n              : errMessage.includes(\"body\")\n              ? \"請輸入文章內容\"\n              : errMessage}\n          </Error>\n        )}\n        <PostContainer>\n          標題\n          <PostTitle\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></PostTitle>\n          內容\n          <PostContent\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          ></PostContent>\n          <Button type=\"submit\">送出</Button>\n        </PostContainer>\n      </form>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getPost, updatePost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst PostContainer = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst PostTitle = styled.input`\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n  color: #333;\n  margin-bottom: 24px;\n  margin-top: 14px;\n`;\n\nconst PostContent = styled.textarea`\n  height: 500px;\n  width: 100%;\n  margin-bottom: 24px;\n  margin-top: 14px;\n  padding: 10px;\n  white-space: ;\n`;\n\nconst Button = styled.button`\n  width: 80px;\n  height: 40px;\n  background: grey;\n  color: white;\n  border: none;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function UpdatePost() {\n  const { id } = useParams();\n  const post = useSelector((store) => store.posts.post);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const errMessage = useSelector((store) => store.posts.errMessage);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    dispatch(\n      updatePost({\n        id,\n        title,\n        body,\n      })\n    ).then((updatePostResponse) => {\n      if (updatePostResponse && updatePostResponse.id) {\n        history.push(`/posts/${updatePostResponse.id}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setBody(post.body);\n    }\n  }, [post]);\n\n  return (\n    <Root>\n      <form onSubmit={handleSubmit}>\n        {errMessage && (\n          <Error>\n            {errMessage.includes(\"title\")\n              ? \"請輸入標題\"\n              : errMessage.includes(\"body\")\n              ? \"請輸入文章內容\"\n              : errMessage}\n          </Error>\n        )}\n        <PostContainer>\n          標題\n          <PostTitle\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></PostTitle>\n          內容\n          <PostContent\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          ></PostContent>\n          <Button type=\"submit\">送出</Button>\n        </PostContainer>\n      </form>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { logout } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  padding: 0 32px;\n  background: white;\n`;\n\nconst Brand = styled.h1`\n  margin: 0;\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  width: 100px;\n  cursor: pointer;\n  text-decoration: none;\n  color: black;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n`;\n\nconst NavLogout = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  width: 100px;\n  cursor: pointer;\n`;\n\nconst HeaderLeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <HeaderLeftContainer>\n        <Brand>My Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav\n            to=\"/archives/1\"\n            $active={location.pathname.includes(\"archives\")}\n          >\n            文章列表\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於我\n          </Nav>\n        </NavbarList>\n      </HeaderLeftContainer>\n      <NavbarList>\n        {!user && (\n          <>\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n            <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n              註冊\n            </Nav>\n          </>\n        )}\n        {user && (\n          <>\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n            <NavLogout onClick={handleLogout}>登出</NavLogout>\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport ArchivePage from \"../../pages/ArchivePage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport PostPage from \"../../pages/Post\";\nimport NewPost from \"../../pages/NewPost\";\nimport UpdatePost from \"../../pages/UpdatePost\";\nimport Header from \"../Header\";\nimport { getMe } from \"../../redux/reducers/userReducer\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(getMe());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/archives/:page\">\n            <ArchivePage />\n          </Route>\n          <Route exact path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route exact path=\"/posts/:id\">\n            <PostPage />\n          </Route>\n          <Route exact path=\"/new-post\">\n            <NewPost />\n          </Route>\n          <Route exact path=\"/posts/update/:id\">\n            <UpdatePost />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './reducers/postReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById(\"root\"));\n"],"sourceRoot":""}